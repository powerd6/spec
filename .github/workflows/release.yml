name: Release

concurrency:
  cancel-in-progress: false
  group: '${{ github.workflow }}'

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Which type of release is this?"
        type: choice
        options:
          - "patch"
          - "minor"
          - "major"
        default: "patch"
          
permissions:
  contents: write

jobs:
  get:
    name: Get versions
    runs-on: ubuntu-latest
    outputs:
      current: ${{ steps.current.outputs.version }}
      next: ${{ steps.next.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_ADMIN_TOKEN }}
      - name: Install semver-cli
        run: |-
          go install github.com/maykonlf/semver-cli/cmd/semver@latest
          echo "$(go env GOPATH)/bin" >> "$GITHUB_PATH"
      - name: Get current version
        id: current
        run: echo "version=$(semver get release)" >> "$GITHUB_OUTPUT"
      - name: Get next version
        id: next
        env:
          FLAG: ${{ inputs.release_type == 'patch' && 'release' || inputs.release_type}}
        run: echo "version=$(semver up "$FLAG")" >> "$GITHUB_OUTPUT"
  prepare:
    name: Prepare release
    runs-on: ubuntu-latest
    needs: get
    env:
      CURRENT: ${{needs.get.outputs.current}}
      NEXT: ${{needs.get.outputs.next}}
      BRANCH_NAME: release-${{needs.get.outputs.next}}
      GITHUB_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: update README.md
        run: sed -i "s/$CURRENT/$NEXT/g" README.md
      - name: update CHANGELOG.md
        run: |-
          head -n 12 CHANGELOG.md > changelog.md.0
          tail -n +14 CHANGELOG.md > changelog.md.1

          echo "" > CHANGELOG.md
          (
            cat changelog.md.0
            echo "## [Unreleased](https://github.com/powerd6/spec/compare/$NEXT...HEAD)"
            echo ""
            echo "## [$NEXT](https://github.com/powerd6/spec/compare/$CURRENT...$NEXT)"
            cat changelog.md.1
          ) >> CHANGELOG.md

          rm changelog.md.*
      - name: Configure git
        run: |-
          git config --global user.email "$(gh api /user | jq -r '.email')"
          git config --global user.name "$(gh api /user | jq -r '.name')"
      - name: Create branch
        run: git checkout -b "$BRANCH_NAME"
      - name: Commit
        run: |-
          git add README.md CHANGELOG.md
          git commit -m "chore: prepare release for $NEXT"
      - name: Push changes
        run: git push -u origin "$BRANCH_NAME"
  pr:
    name: Create Pull Request
    runs-on: ubuntu-latest
    needs:
      - get
      - prepare
    outputs:
      pr: ${{ steps.pr.outputs.link }}
    env:
      GITHUB_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release-${{needs.get.outputs.next}}
      - name: Create Pull Request
        id: pr
        run: |-
          gh pr create --fill > PR_URL
          echo "link=$PR_URL" >> "$GITHUB_OUTPUT"
  merge:
    name: Merge Pull Request
    runs-on: ubuntu-latest
    needs: pr
    env:
      PR_LINK: ${{needs.pr.outputs.pr}}
    steps:
      - uses: actions/checkout@v3
      - name: Merge PR
        run: gh pr merge $GH_PR_URL
  draft:
    name: Draft release
    runs-on: ubuntu-latest
    needs:
      - get
      - merge
    env:
      NEXT: ${{needs.get.outputs.next}}
    steps:
      - uses: actions/checkout@v3
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
        run: |-
          gh release create "$NEXT" \
            --target main 
            --title "$NEXT" \
            --generate-notes \
            --latest \
            --draft


        

